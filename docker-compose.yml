services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server kafka:29092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  kafka-init:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-init
    depends_on:
      kafka:
        condition: service_healthy
    command: ["kafka-topics", "--bootstrap-server", "kafka:29092", "--create", "--topic", "image-processing", "--partitions", "1", "--replication-factor", "1", "--if-not-exists"]
    
  app:
    build:
      context: .
      dockerfile: Dockerfile.app
    container_name: image-processor-app
    depends_on:
      kafka-init:
        condition: service_completed_successfully
    environment:
      HTTP_PORT: "8080"
      LOG_LEVEL: "info"
      KAFKA_BROKERS: "kafka:29092"
      KAFKA_TOPIC: "image-processing"
      KAFKA_GROUP: "image-processor-group"
      STORAGE_PATH: "/app/storage"
    ports:
      - "8080:8080"
    volumes:
      - image-storage:/app/storage
      - image-metadata:/app/metadata

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: image-processor-worker
    depends_on:
      kafka-init:
        condition: service_completed_successfully
    environment:
      LOG_LEVEL: "info"
      KAFKA_BROKERS: "kafka:29092"
      KAFKA_TOPIC: "image-processing"
      KAFKA_GROUP: "image-processor-group"
      STORAGE_PATH: "/app/storage"
      THUMBNAIL_SIZE: 200
      RESIZE_WIDTH: 800
    volumes:
      - image-storage:/app/storage
      - image-metadata:/app/metadata

volumes:
  image-storage:
  image-metadata: